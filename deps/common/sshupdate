#!/bin/bash
# Description:
# Script that is intended to run at the server host that is managing all clients.
# This is the command that will instruct the clients what to do etc. 
#
# Essentially it is supposed to replicate the commands from wrapper.sh:
# awk -F"\"" '$NF ~ /^\)/ { print $2 }' wrapper.sh

### Import existing config
[ -f /etc/sshupdate/config ] && source /etc/sshupdate/config
[ -f ~/.sshupdate/config ] && source ~/.sshupdate/config

### Variables
SSHKEY=${SSHKEY-~/sshupdate/keys/sshupdated}
SSHPORT=${SSHPORT-2222}

# Sane PATH
PATH=/sbin:/usr/sbin:/bin:/usr/bin

### Arguments
ACTION=$1
TARGET=$2

### Functions
function f_help {
  PROG=$(basename $0)
  echo -e "Usage: $PROG action target\n"
  echo "$PROG actions:"
  for FUNC in $(awk -F"\"" '$NF ~ /^\)/ { print $2 }' $0)
  do
    echo "  $FUNC"
  done
  echo -e "\nNote: $PROG uses relative paths."
  exit 1
}

function f_sshupdate {
  if [ ! -z $1 ] && [ -z $2 ]
  then
    echo -e "Missing target.\n"
    f_help
  fi

  ssh -i ${SSHKEY} $2 -p ${SSHPORT} $1
}

function f_query_user {
  while true
  do
    echo $1
    echo -n "Answer: "
    read QUERY_ANSWER
    if [ "$2" = "check_file" ]
    then
      [ -e "$QUERY_ANSWER" ] && break
    else 
      [ ! -z "$QUERY_ANSWER" ] && break 
    fi
  done
}

function f_check_config {
  if [ ! -f /etc/sshupdate/config ] && [ ! -f ~/sshupdate/config ]
  then
    [ ! -d ~/sshupdate ] && mkdir -p ~/sshupdate
    f_query_user "Where are your SSH-keys for sshupdated located?" check_file
    echo "SSHKEY=${QUERY_ANSWER}" >> ~/sshupdate/config
    f_query_user "Which port do you want to use?"
    echo "SSHPORT=${QUERY_ANSWER}" >> ~/sshupdate/config
  fi
}

### Main
f_check_config

[ "$#" -eq "0" ] && f_help


case "$ACTION" in
  "inventory")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  "patch")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  "upgrade-major")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  "upgrade-major-n-reboot")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  "available-updates")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  "patch-n-reboot")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  "reboot-if-needed")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  "check-if-reboot-req")
    f_sshupdate ${ACTION} ${TARGET}
  ;;
  *)
    echo -e "Invalid action.\n"
    f_help
  ;;
esac

